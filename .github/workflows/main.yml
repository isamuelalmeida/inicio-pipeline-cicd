name: CI CD

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  K8S_DEPLOYMENT: web
  K8S_NAMESPACE: spring-demo
  EKS_CLUSTER_NAME: cosmos-eks-dev
  DOCKER_IMAGE: saiwmon/app-devopspro
  DOCKER_TAG: v${{ github.run_number }}

jobs:
#  CI:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Obtendo o código
#        uses: actions/checkout@v4.1.7
#      - name: Login no Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Build e push da imagem
#        uses: docker/build-push-action@v6
#        with:
#          context: ./src
#          push: true
#          tags: |
#            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
#            ${{ env.DOCKER_IMAGE }}:latest

 CD:
#   needs: [CI]
   runs-on: ubuntu-latest
   steps:
     - name: Obtendo o código
       uses: actions/checkout@v4.1.7
     - name: Configure AWSCLIv2 e AWS credentials
       run: |
         aws --version
         sudo apt install curl wget unzip -y
         sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
         sudo unzip awscliv2.zip
         sudo ./aws/install
         aws --version
         export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
         export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
         export AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
     - name: Configura kube config
       run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
     - name: Deploy no EKS
       run: |
         sed -i 's|image: .*$|image: '"${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"'|' ./k8s/src/deployment.yaml
         kubectl apply -f ./k8s/src/deployment.yaml -n ${{ env.K8S_NAMESPACE }}
     - name: Verificar rollout status
       run: kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT }} -n ${{ env.K8S_NAMESPACE }}
